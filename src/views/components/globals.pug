//-  ██████╗ ██╗      ██████╗ ██████╗  █████╗ ██╗     ███████╗
//- ██╔════╝ ██║     ██╔═══██╗██╔══██╗██╔══██╗██║     ██╔════╝
//- ██║  ███╗██║     ██║   ██║██████╔╝███████║██║     ███████╗
//- ██║   ██║██║     ██║   ██║██╔══██╗██╔══██║██║     ╚════██║
//- ╚██████╔╝███████╗╚██████╔╝██████╔╝██║  ██║███████╗███████║
//-  ╚═════╝ ╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝

- var medias = ["linkedin", "github", "instagram", "blog"]
- var themes = ["shapes", "discounts", "statistics"]
- var technologies = ["figma", "html", "css", "js", "npm", "pug", "sass", "webpack", "git", "github"]

//- --------------------------------------------------------------------------------------
//- Navbar

mixin medias
	ul#navbar__menu
		a(href="https://luisariza.github.io/portfolio" target="_blank") #[li Portafolio]
		each item in medias
			a(href="#")
				li
					case item
						when "linkedin"
							| Linkedin
						when "github"
							| Github
						when "instagram"
							| Instagram
						when "blog"
							| Blog
				figure.small__icon: i(class="small__icon--media-" + item)

//- --------------------------------------------------------------------------------------
//- Menu

mixin themes(theme, title)
	.menu__themes.themes
		each item in themes
			a.themes__bar.themes__bar--anime(href='#' + item + '-container')
				figure.medium__icon: i(class="medium__icon--theme-" + item)
				case item
					when "shapes"
						| Figuras
					when "discounts"
						| Descuentos
					when "statistics"
						| Estadisticas

mixin technologies
	figure.menu__technologies
		each item in technologies
			.medium__icon: i(class="medium__icon--tech-" + item)

//- --------------------------------------------------------------------------------------
//- Shapes

mixin shape-box(title, shape)
	section(class="shape__" + shape).card
		h3.card__title= title
		p.card__description Ingresa las medidas en #[strong centímetros]:
		case shape
			when "square"
				form.form
					label #[strong Lado]#[input.form__input#squareInput(type='number' placeholder='0')]
					button.button.squareCalc(type='button') Calcular
			when "rectangle"
				form.form--content-2
					label #[strong Altura]#[input.form__input#rectangleHeightInput(type='number' placeholder='0')]
					label #[strong Base]#[input.form__input#rectangleBaseInput(type='number' placeholder='0')]
					button.button.rectangleCalc(type='button') Calcular
			when "triangle"
				ul.card__info
					li Si el triangulo tiene 2 lados iguales, la #[strong base] es el valor diferente a los 2 lados.
					li Si todos los lados del triangulo son desiguales, asegurate de colocar los valores de menor a mayor.
				form.form--content-3
					label #[strong Lado A]#[input.form__input#triangleSideAInput(type='number' placeholder='0')]
					label #[strong Lado B]#[input.form__input#triangleSideBInput(type='number' placeholder='0')]
					label #[strong Base]#[input.form__input#triangleBaseInput(type='number' placeholder='0')]
					button.button.triangleCalc(type='button') Calcular
			when "diamond"
				ul.card__info
					li La #[strong 1° diagonal] puede ser la menor o mayor.
				form.form--content-2
					label #[strong Lado]#[input.form__input#diamondSideInput(type='number' placeholder='0')]
					label #[strong 1° Diagonal]#[input.form__input#diamondDiagonalInput(type='number' placeholder='0')]
					button.button.diamondCalc(type='button') Calcular
			when "circle"
				form.form
					label #[strong Radio]#[input.form__input#circleInput(type='number' placeholder='0')]
					button.button.circleCalc(type='button') Calcular
		if shape== "triangle"
			ul.card__results--triangle
				li #[strong Tipo]#[p#triangleType]
				li #[strong Altura]#[p#triangleHeight 0#[span cm]]
				li #[strong Perimetro]#[p(id=shape + "Perimeter") 0#[span cm]]
				li #[strong Área]#[p(id=shape + "Area") 0#[span cm#[sup 2]]]
		else
			ul.card__results
				if shape== "diamond"
					li #[strong 2° Diagonal]#[p#diamondDiagonal 0#[span cm]]
				if shape== "circle"
					li #[strong Circunferencia]#[p#circumference 0#[span cm]]
				else
					li #[strong Perimetro]#[p(id=shape + "Perimeter") 0#[span cm]]
				li #[strong Área]#[p(id=shape + "Area") 0#[span cm#[sup 2]]]

//- --------------------------------------------------------------------------------------
//- Discounts

mixin discount-price-box
	section.discounts__price.card
		form.form--content-2
			label #[strong Precio del producto]#[input.form__input#priceInput(type='number' placeholder='$')]
			label #[strong Descuento]#[input.form__input#discountInput(type='number' placeholder='%')]
			button.button.discountCalc(type='button') Calcular
		ul.card__results
			li #[strong Precio con descuento]#[p#priceDiscount #[span $]0]

mixin discount-cupon-box
	section.discounts__cupon.card
		h3.card__title Descuento con cupon
		.card__product
			.card__product--image
			h4.card__product--title Guitarra Fender Stratocaster American Standard
			p.card__product--price#priceCode #[span $]950
			p.card__product--description Aprovecha ahora y aplica hasta un 30% de descuento con tu código de referido.
			form.form
				label #[strong Ingresa aquí tu cogido]#[input.form__input.card__product--input#inputCode(type='text' placeholder='awesomeGuitar30')]
				button.button.card__product--button.confirmCupon(type='button') Confirmar
			p.card__product--validation#validation

//- --------------------------------------------------------------------------------------
//- Statistics

mixin statistic-box
	section.statistics__MMM.card
		p.card__data Lista
		p.card__info#data
		form.form
			label Ingresa aquí los datos de la lista#[input.form__input#dataInput(type='number' placeholder='0')]
			.button__container
				button.button--insert.insert(type='button') Ingresar
				button.button--remove.remove(type='button') Remover
			button.button.statisticCalc(type='button') Calcular
		ul.card__results
			li #[strong Promedio]#[p#mean 0]
			li #[strong Mediana]#[p#median 0]
			li #[strong Moda]#[p#mode 0]